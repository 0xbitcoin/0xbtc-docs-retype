[[{"l":"0xBitcoin Documentaton","p":["Maximum supply of 21,000,000","Initial supply of 0","All tokens must be mined with auto-adjusting Proof of Work (adjustment ruleset in solidity)","Initial reward is 50 coins","Halvenings occur when half of the remaining supply has been mined (such that the first halvening occurs at 10.5m supply.)"]}],[{"l":"Open 0xBTC API","p":["Find it on Github","The 'Open 0xBTC API' is an initiative to create a standardized decentralized api node for mining data. This is a self-hosted trustless API where data for 0xBTC is computed independently from a Web3 Data Provider such as a Full Ethereum Node.","This API uses a local mongoDB to cache and compute on historical 0xBitcoin mint data."]},{"l":"Using the API","p":["POST /api/mints/ Returns data about recent 0xBTC mints. Returns all mint data in time Descending order.","Input Fields","contractAddress The contract address of the 0xBitcoin smart contract.","size The amount of results to return. Maximum of 500. Defaault is 1.","spacing The miningEpoch gap between each of the results to return. Default is 1.","startEpoch The starting epoch of mint. Default is the latest mint epoch (closest to present time)."]}],[{"i":"integration-javascript","l":"Integration (Javascript)"}],[{"i":"methods-js","l":"Methods (JS)","p":["allowance(address tokenOwner, address spender) returns the number of tokens that 'tokenOwner' allows 'spender' to 'transferFrom' on their behalf","AND","approve(address spender, uint256 amount) Approve 'amount' tokens for 'spender' to spend on your behalf using 'transferFrom'","approveAndCall(address spender, uint256 amount, bytes data) Approve 'amount' tokens for 'spender' to spend on your behalf and remote execute the 'ApproveAndCallFallback(address from, uint256 amount, bytes data)' method of the contract at address 'spender'","balanceOf(address tokenOwner) returns the number of tokens owned by 'tokenOwner'","decimals() returns '8'","epochCount() returns the number of times that the mint method has been called","getChallengeNumber() returns the current 'challenge number' used for the PoW mint method. This is a recent Ethereum blockhash, established during the previous PoW mint.","getMiningDifficulty() returns the current difficulty multiplier for the PoW mint method","getMiningReward() returns the number of tokens awarded for the PoW mint method","getMiningTarget() returns the current difficulty target for the PoW mint method","maxSupplyForEra() returns the next tokensMinted amount at which the rewardEra will increme","mint(uint256 nonce, bytes32 challengeDigest) Submit a nonce and challengeDigest in order to mint 'getMiningReward' new tokens. The new tokens are automatically sent to msg.sender. The nonce is a number that is non-trivial to find for a machine. Classical computers must use brute force, or guess-and-check, to find the nonce. The nonce is valid if and only if:","name() returns the name of the token","rewardEra() returns the number of halvenings that have occured","Since msg.sender is part of the hashing function, solution-nonces are scoped for a particular address. Only that address will be allowed to submit the solution to the contract. This prevents frontrunning/interception.","symbol() returns the symbol of the token","tokensMinted() returns the amount of tokens in active circulation","totalSupply() returns the maximum diluted supply for the token","transfer(address to, uint256, amount) Transfer 'amount' tokens from msg.sender to 'to'","transferFrom(address from, address to, uint256 amount) Transfer 'amount' tokens from 'from' to 'to'. Requires pre-approval using 'approve'."]}],[{"l":"0xBitcoin Network Smart Contracts"},{"l":"ETHEREUM","p":["Mainnet: 0xb6ed7644c69416d67b522e20bc294a9a9b405b31"]},{"l":"LAYER TWO","p":["Arbitrum: 0x7cb16cb78ea464ad35c8a50abf95dff3c9e09d5d Optimism: 0xe0BB0D3DE8c10976511e5030cA403dBf4c25165B Polygon: 0x71b821aa52a49f32eed535fca6eb5aa130085978"]},{"l":"TESTNETS","p":["Goerli: 0xab89a7742cb10e7bce98540fd05c7d731839cf9f Kovan: 0x24a19ee5a5c8757acdebe542a9436d9c796d1c9e Rinkeby: 0x244aa29426fb6524760bd9acbb66ad53c5eb32ca"]}],[{"l":"About 0xBitcoin","p":["Since being deployed in 2018, coins have been minted from the smart contract over 100,000 times."]},{"l":"Pure Mined","p":["Miners use specialized computers called FPGAs and ASICs to solve mathematical challenges. This is what creates all 0xBTC tokens in order to make 0xBitcoin the most decentralized and neutral asset on Mainnet."]},{"l":"Native","p":["Since the 0xBitcoin contract is directly deployed in Ethereum Mainnet, no bridges or IOUs are needed to account for 0xBitcoins in an Ethereum wallet. This way, users can self-custody, stake, and trade 0xBTC with zero-trust in any third party. The immutable smart contract itself is the only system used end-to-end."]}]]